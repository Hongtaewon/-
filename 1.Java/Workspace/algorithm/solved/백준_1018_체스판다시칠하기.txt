import java.io.*;
import java.util.*;

public class Main {

	static char case1[][] = { 
			{'W', 'B', 'W', 'B', 'W', 'B','W','B'},
			{'B', 'W', 'B', 'W', 'B','W', 'B', 'W'}, 
			{'W', 'B', 'W', 'B', 'W', 'B','W','B'},
			{'B', 'W', 'B', 'W', 'B','W', 'B', 'W'}, 
			{'W', 'B', 'W', 'B', 'W', 'B','W','B'},
			{'B', 'W', 'B', 'W', 'B','W', 'B', 'W'}, 
			{'W', 'B', 'W', 'B', 'W', 'B','W','B'},
			{'B', 'W', 'B', 'W', 'B','W', 'B', 'W'}
	};
	
	static char case2[][] = {
		{'B', 'W', 'B', 'W', 'B','W', 'B', 'W'}, 
		{'W', 'B', 'W', 'B', 'W', 'B','W','B'},
		{'B', 'W', 'B', 'W', 'B','W', 'B', 'W'}, 
		{'W', 'B', 'W', 'B', 'W', 'B','W','B'},
		{'B', 'W', 'B', 'W', 'B','W', 'B', 'W'}, 
		{'W', 'B', 'W', 'B', 'W', 'B','W','B'},
		{'B', 'W', 'B', 'W', 'B','W', 'B', 'W'}, 
		{'W', 'B', 'W', 'B', 'W', 'B','W','B'}
	};
	
	static char[][] map;
	
	public static void main(String[] args) throws Exception {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		int m = Integer.parseInt(st.nextToken());
		
		map = new char[n][m];
		for(int i =0;i<n;i++)
		{
			st = new StringTokenizer(br.readLine());
			String temp = st.nextToken();
			for(int j = 0;j<m;j++)
			{
				map[i][j] = temp.charAt(j);
			}
		}
		
		int min = 99999;
		for(int i = 0;i<=n-8;i++)
		{
			for(int j = 0;j<=m-8;j++)
			{
				int cnt = compare(i,j);
				min = min > cnt? cnt : min;
			}
		}
		System.out.println(min);
	}
	
	public static int compare(int x,int y)
	{
		int temp1=0;
		int temp2=0;
		for(int i = 0;i<8;i++)
		{
			for(int j = 0;j<8;j++)
			{
				if(map[x+i][y+j] != case1[i][j]) temp1++;
				if(map[x+i][y+j] != case2[i][j]) temp2++;
			}
		}
		
		return temp1>temp2? temp2:temp1;
	}
}