import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class Main {

	static int n;
	static int[] arr;
	
	public static void main(String[] args) throws Exception {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		n = Integer.parseInt(br.readLine());
		StringTokenizer st = new StringTokenizer(br.readLine());
		arr = new int[n];
		
		for(int i = 0;i<n;i++)
		{
			arr[i] = Integer.parseInt(st.nextToken());
		}
		
		for(int i = 0;i<n;i++)
		{
			dfs(i,new boolean[n],new int[n],1);
		}
		
		bw.write(max+"\n");
		
		bw.flush();
	}
	static int max = 0;
	public static void dfs(int idx, boolean[] visited,int[] narr,int cnt) {

		boolean[] visit = visited.clone();
		int[] tarr = narr.clone();
		tarr[cnt-1] = arr[idx];
		visit[idx] = true;
		
		if(cnt == n)
		{
			int temp = 0;
			for(int i = 0;i<n-1;i++)
				temp += Math.abs(tarr[i]-tarr[i+1]);
			
			if(temp > max) 
				max = temp;
			
			return;
		}
		for(int i = 0;i<n;i++)
		{
			if(visit[i] == true) continue;
			dfs(i,visit,tarr,cnt+1);
		}
		
	}
	
	
}