import java.io.*;
import java.util.*;

public class Main {

	static int n,m;
	static class Node{
		char val;
		boolean isLast=false;
		Node[] node = new Node[26];
		
		Node(char val,boolean last)
		{
			this.val = val;
			this.isLast = last;
		}
		public Node setNode(int val)
		{
			Node temp = new Node((char) val,false);
			
			return this.node[val-97] = temp;
		}
		public Node getNode(int val)
		{
			return this.node[val-97];
		}
		public boolean checkLast(int val)
		{
			if(this.node[val-97] != null)
				return this.node[val-97].isLast;
			return false;
		}
		public boolean checkNode(int val)
		{
			if(this.node[val-97] != null )
				return false;
			return true;
		}
	}
	
	public static void main(String[] args) throws Exception {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(br.readLine());
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		
		Node root = new Node('0', false);
		int cnt = 0;
		for(int i=0;i<n;i++)
		{
			Node now = root;
			String temp = br.readLine();
			for(int k=0;k<temp.length();k++)
			{
				char ch = temp.charAt(k);
				if(now.checkNode(ch))
					now = now.setNode(ch);
				else
				{
					now = now.getNode(ch);
					continue;
				}
			}
			now.isLast = true;
		}
		
		for(int i=0;i<m;i++)
		{
			Node now = root;
			String temp = br.readLine();
			for(int k=0;k<temp.length();k++)
			{
				char ch = temp.charAt(k);
				if(k+1 == temp.length())
				{
					if(now.checkLast(ch))
					{
						cnt++;
						break;
					}
				}
				else
				{
					now = now.getNode(ch);
					if(now == null)
						break;
				}
			}
		}
		
		bw.write(cnt+"\n");
		bw.flush();
	}
}